<script>
    function onTripInfoForPeriodChange(arg) {
        memberHolidayPayPeriodGridHandler.onChange(arg);
        @*var id = memberHolidayPayPeriodGridHandler.currentItem().Id;
        $(".edit-action").data("action-name", "Edit?id=" + id + "&shipId=" + @Model.Id);
        $(".delete-action").data("action-name", "Delete?id=" + id + "&shipId=" + @Model.Id);*@
        }

    function onTripInfoForPeriodDataBound(e) {
        memberHolidayPayPeriodGridHandler.onDataBound(e);
    }

    function onTripInfoForPeriodDataBinding(e) {
        memberHolidayPayPeriodGridHandler.onDataBinding(e);
    }

    var memberHolidayPayPeriodGridHandler;
</script>
@{
    var from = @DateTime.Now.Year - 4;
    var to = @DateTime.Now.Year;
}
@(Html.Kendo().Grid<BootstrapWebApplication.Models.MemberTripInfoForYearTotal>()
    .Name("gridTripInfoForPeriod")
    .Columns(columns =>
    {
        columns.Bound(p => p.Id).Hidden();
        columns.Bound(p => p.Year).Title(@Resources.Year);
        columns.Bound(p => p.Days).Title(@Resources.Days);
        columns.Bound(p => p.Trips).Title(@Resources.Trips);
        columns.Bound(p => p.LastDate).Format("{0:d}").Title(@Resources.Date);
        columns.Bound(p => p.ShipCode).Title(@Resources.Code);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
            <div class="toolbar">
                <form class="form-inline">
                    @Resources.Trips @Resources.From.ToLower()
                    <input id="TripInfoForPeriod_From" type="number" value="@from" />
                    @Resources.To.ToLower()
                    <input id="TripInfoForPeriod_To" type="number" value="@to" />
                    @*<a id="getHolidayPaysForPeriod" href="#" class="k-button">@Resources.Load</a>*@
                </form>
            </div>
        </text>);
    })
    .Selectable()
    .Navigatable()
    .Events(events => events.Change("onTripInfoForPeriodChange").DataBound("onTripInfoForPeriodDataBound").DataBinding("onTripInfoForPeriodDataBinding"))
    .Pageable(pageable => pageable
        .Messages(m=>
            m.ItemsPerPage(@Resources.ItemsPerPage)
            .First(@Resources.First)
            .Previous(@Resources.Previous)
            .Next(@Resources.Next)
            .Last(@Resources.Last)
            .Refresh(@Resources.Refresh)
            .Display("{0} - {1} " + @Resources.Of.ToLower() + " {2} " + @Resources.Items.ToLower())
            .Page(@Resources.Page)
            .Of(@Resources.Of)
            .Empty(@Resources.NoItemsToDisplay))
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
    .HtmlAttributes(new { style = "min-height:250px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .ServerOperation(true)
        //.Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.Id))
        .Read(read => read.Action("MemberTripInfoForPeriod_Read", "Member", new { id = @Model.Id, from = @from, to = @to }))
    )
)

<script>
    $(function () {

        memberHolidayPayPeriodGridHandler = new GridHandler("#gridTripInfoForPeriod");
        memberHolidayPayPeriodGridHandler.onDoubleClick = function (item) {
            //navigate('/{Controller}/Details/' + item.Id);
        };
        memberHolidayPayPeriodGridHandler.onItemDelete = function (item) {
            //console.log(item);
            //$(".delete-action").filter(":visible").click();
        };

        $("#TripInfoForPeriod_From, #TripInfoForPeriod_To").kendoNumericTextBox({
            format: "0",
            min: 1970,
            max: 2070,
            step: 1
        });

        $("#TripInfoForPeriod_From, #TripInfoForPeriod_To").change(function (e) {
            //$("#getHolidayPaysForPeriod").click(function (e) {
            var from = $("#TripInfoForPeriod_From").val();
            var to = $("#TripInfoForPeriod_To").val();

            var grid = $("#gridTripInfoForPeriod").data("kendoGrid");
            if (from && to) {
                grid.dataSource.filter([{ field: "from", operator: "eq", value: from }, { field: "to", operator: "eq", value: to }]);
            } else {
                grid.dataSource.filter({});
            }
        });
    });
</script>