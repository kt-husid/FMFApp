@*<script src="//cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.min.js"></script>*@
@*@section SidebarMenu {
        <ul class="nav nav-sidebar">
            <li class="active"><a href="#">Overview</a></li>
            <li><a href="#">Some nav link</a></li>
        </ul>
    }*@
@{
    var title = @Resources.Company;
    var controllerName = ViewContext.GetControllerName();
    ViewBag.Title = title;
}
@*<h2>@title</h2>*@
@(Html.Kendo().Grid<BootstrapWebApplication.Models.CompanyViewModel>()
    .Name("gridCompany")
    .Columns(columns =>
    {
        columns.Bound(p => p.Id).Hidden();
        //columns.Bound(p => p.CID).Title(@Resources.VAT);
        columns.Bound(p => p.Code).ClientTemplate("<text><a href='/Company/Details/#= Id #'>#= Code #</a></text>").Title(@Resources.Code);
        columns.Bound(p => p.Name).ClientTemplate("<text><a href='/Company/Details/#= Id #'>#= Name #</a></text>").Title(@Resources.Name);
        columns.Bound(p => p.City).Title(@Resources.City);
        columns.Bound(p => p.Postal).Title(@Resources.Postal);
        columns.Bound(p => p.Description).Title(@Resources.Description);
        columns.Bound(p => p.ContactCompanyName).Title(@Resources.ContactCompany);
        columns.Bound(p => p.ContactPersonName).Title(@Resources.ContactPerson);
        //columns.Command(command =>
        //{
        //    command
        //        .Edit().Text(@Resources.Edit)
        //        .HtmlAttributes(new { @class = "btn-xs" });
        //    command
        //        .Destroy()
        //        .HtmlAttributes(new { @class = "hide" });
        //})
        //.Width(120);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
            <div class="toolbar">
                @Html.ExportToExcelButton("Excel")
                <input type="text" id="GridSearch" class="k-textbox" />
                <button tabindex="-1" class="create-action k-button" data-toggle='modal' data-controller-name='Company' data-action-name='Create' data-model-name='Company'>@Resources.Create</button>
                <button tabindex="-1" class="edit-action k-button" data-toggle='modal' data-controller-name='Company' data-action-name='' data-model-name='Company'>@Resources.Edit</button>
                <button tabindex="-1" class="delete-action k-button" data-toggle='modal' data-controller-name='Company' data-action-name='' data-model-name='Company'>@Resources.Delete</button>
            </div>
        </text>);
    })
    .Reorderable(reorderable=>reorderable.Columns(false))
    //.Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Pageable(pageable => pageable
        .Messages(m=>
            m.ItemsPerPage(@Resources.ItemsPerPage)
            .First(@Resources.First)
            .Previous(@Resources.Previous)
            .Next(@Resources.Next)
            .Last(@Resources.Last)
            .Refresh(@Resources.Refresh)
            .Display("{0} - {1} " + @Resources.Of.ToLower() + " {2} " + @Resources.Items.ToLower())
            .Page(@Resources.Page)
            .Of(@Resources.Of))
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
    //.Filterable(ftb => ftb.Mode(GridFilterMode.Menu))
    .Sortable()
    //.Excel(excel => excel
    //    .FileName("companies.xlsx")
    //    .Filterable(true)
    //    .ProxyURL(Url.Action("ExportToExcel", "Company"))
    //)
    //.Scrollable()
    .Navigatable()
    //.Groupable()
    .Excel(excel => excel
        //.ForceProxy(true)
        .AllPages(true)
        .FileName("Virkir.xlsx")
        .Filterable(true)
        .ProxyURL(Url.Action("ExportToExcel"))
    )
    .Selectable()
    .Events(events => events.Change("onCompanyChange").DataBound("onCompanyDataBound").DataBinding("onCompanyDataBinding"))
    .HtmlAttributes(new { style = "min-height:350px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .ServerOperation(true)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.Id))
        .Read(read => read.Action("Read", "Company"))
    )
)
<script>
    var gridHandler;

    $(function () {
        gridHandler = new GridHandler("#gridCompany", "#GridSearch");
        gridHandler.focusSearch();
        gridHandler.onDoubleClick = function (item) {
            navigate('/Company/Details/' + item.Id);
        };
        gridHandler.onItemDelete = function (item) {
            //console.log(item);
            $(".delete-action").filter(":visible").click();
        };
        //gridHandler.onSearching = function () {
        //  //Override search functionality
        //};
        //gridHandler.onKeydown = function (e) {
        //  //Override default shortcuts
        //}
        gridHandler.onItemOpen = function (item) {
            navigate('/Company/Details/' + item.Id);
        };
    });

    function onCompanyChange(arg) {
        gridHandler.onChange(arg);
        var companyId = gridHandler.currentItem().Id;
        $(".edit-action").data("action-name", "Edit?id=" + companyId);
        $(".delete-action").data("action-name", "Delete?id=" + companyId);
    }

    function onCompanyDataBound(arg) {
        gridHandler.onDataBound(arg);
    }

    function onCompanyDataBinding(e) {
        gridHandler.onDataBinding(e);
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>